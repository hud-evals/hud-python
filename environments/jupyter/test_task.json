[
    {
        "id": "59196",
        "prompt": "You are a spreadsheet expert who can manipulate spreadsheets through Python code.\n\nYou need to solve the given spreadsheet manipulation question, which contains six types of information:\n- instruction: The question about spreadsheet manipulation.\n- spreadsheet_path: The path of the spreadsheet file you need to manipulate.\n- spreadsheet_content: The first few rows of the content of speadsheet file.\n- instruction_type: There are two values (Cell-Level Manipulation, Sheet-Level Manipulation) used to indicate whether the answer to this question applies only to specific cells or to the entire worksheet.\n- answer_position: The position need to be modified or filled. For Cell-Level Manipulation questions, this field is filled with the cell position; for Sheet-Level Manipulation, it is the maximum range of cells you need to modify. You only need to modify or fill in values within the cell range specified by answer_position.\n- output_path: You need to generate the modified spreadsheet file in this new path.\n\nBelow is the spreadsheet manipulation question you need to solve:\n### instruction\nI need a formula to determine which column contains the highest value in a row, and then return the heading of that column. My Excel sheet example is attached.\n\n### spreadsheet_path\n/app/data/all_data_912/spreadsheet/59196/1_59196_input.xlsx\n\n### spreadsheet_content\nSheet Name: Sheet1\n   Unnamed: 0  Unnamed: 1  Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5 Unnamed: 6 Unnamed: 7\n0         NaN         NaN         NaN          A          B          C          D        MAX\n1         NaN         NaN         NaN          0          0          1          2          D\n2         NaN         NaN         NaN          2          0          0          1        NaN\n3         NaN         NaN         NaN          0          1          0          2        NaN\n--------------------------------------------------\n\n\n### instruction_type\nCell-Level Manipulation\n\n### answer_position\nH3:H5\n\n### output_path\n/app/data/all_data_912/spreadsheet/59196/1_59196_output.xlsx\n\nThe solution of the question can be generate through 10 rounds of interaction and you can do two types of actions.\n1. Spreadsheet information acquisition: You can generate Python code to obtain the information in the spreadsheet file. In the next turn, the execution result of you Python code will provide to you.\n2. Question solution generation: You can generate Python code for the final solution of the question. If error occur when executing code, the error traceback will provide to you for code refinement.\nWe have loaded input xlxs file in `wb` varible using openyxl workbook in setup stage, so starts from dataframe manipulation instead of read!\n**IMPORTANT**: PLEASE FILL THE ANSWER WITH VALUES RATHER THAN FORMULAS\n",
        "mcp_config": {
            "local": {
                "command": "docker",
                "args": [
                    "run",
                    "--rm",
                    "-i",
                    "genteki/jupyter:dev"
                ]
            }
        },
        "setup_tool": {
            "name": "load_spreadsheet",
            "arguments": {
                "id": "59196"
            }
        },
        "evaluate_tool": {
            "name": "eval_all",
            "arguments": {
                "id": "59196",
                "answer_position": "H3:H5"
            }
        }
    }
]